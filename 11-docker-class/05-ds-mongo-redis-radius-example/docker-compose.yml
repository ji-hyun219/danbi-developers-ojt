version: "3.7"
services:
  backend:
    # private registry
    image: 759927213627.dkr.ecr.ap-northeast-2.amazonaws.com/gn-cp-api:latest
    environment:
      - NODE_ENV=production
    networks:
      - inbound
      - backend
    logging:
      driver: json-file
      options:
        max-file: "10"
        max-size: "100m"
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.docker.network=inbound
        - traefik.http.routers.gn-cp-api.rule=Host(`gn.cp.danbicorp.com`)
        - traefik.http.routers.gn-cp-api.service=gn-cp-api-service
        - traefik.http.routers.gn-cp-api.entrypoints=websecure
        - traefik.http.routers.gn-cp-api.tls=true
        - traefik.http.routers.gn-cp-api.tls.certresolver=gn-cp
        - traefik.http.services.gn-cp-api-service.loadbalancer.server.port=3000

  mongodb:
    image: mongo:latest
    networks:
      - backend
    volumes:
      - mongodb:/data/db
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "20m"

  redis:
    image: library/redis:6
    networks:
      - backend
    volumes:
      - redisData:/data
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: "20m"

  radius:
    build: ./radius
    image: 759927213627.dkr.ecr.ap-northeast-2.amazonaws.com/danbi-radius:latest
    networks:
      - inbound
    command: -X
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.docker.network=inbound
        - traefik.udp.routers.danbi-radius-auth.entrypoints=auth
        - traefik.udp.routers.danbi-radius-acct.entrypoints=acct
        - traefik.udp.routers.danbi-radius-auth.service=danbi-radius-auth-service
        - traefik.udp.routers.danbi-radius-acct.service=danbi-radius-acct-service
        - traefik.udp.services.danbi-radius-auth-service.loadbalancer.server.port=1812
        - traefik.udp.services.danbi-radius-acct-service.loadbalancer.server.port=1813
    logging:
      driver: json-file
      options:
        max-file: "10"
        max-size: "100m"

  traefik:
    image: traefik:2.2
    command:
      #- --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmMode=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.auth.address=:1812/udp
      - --entrypoints.acct.address=:1813/udp
      - --certificatesResolvers.gn-cp.acme.httpchallenge=true
      - --certificatesResolvers.gn-cp.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.gn-cp.acme.storage=/letsencrypt/acme.json
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 1812
        published: 1812
        protocol: udp
        mode: host
      - target: 1813
        published: 1813
        protocol: udp
        mode: host
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - inbound
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "20m"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

volumes:
  letsencrypt:
  redisData:
  mongodb:

networks:
  inbound:
    name: inbound
  backend:
    name: backend